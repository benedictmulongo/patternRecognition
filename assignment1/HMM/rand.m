function [X,S]=rand(h,nSamples)%[X,S]=rand(h,nSamples);generates a random sequence of data%from a given Hidden Markov Model.%%Input:%h=         HMM object%nSamples=  maximum no of output samples (scalars or column vectors)%%Result:%X= matrix or row vector with output data samples%S= row vector with corresponding integer state values%   obtained from the h.StateGen component.%   nS= length(S) == size(X,2)= number of output samples.%   If the StateGen can generate infinite-duration sequences,%       nS == nSamples%   If the StateGen is a finite-duration MarkovChain,%       nS <= nSamples%%----------------------------------------------------%Code Authors:%----------------------------------------------------if numel(h)>1    error('Method works only for a single object');end;%Space for resulting state and observation sequenceS = zeros(1,nSamples);X = []function r=random_state(prob)    C = cumsum(prob);    states = [1:h.StateGen.nStates];    r = states(1+sum(C(end)*rand>C));endinit_prob = h.StateGen.InitialProb;trans_prob = h.StateGen.TransitionProb;%Sample random initial states_init = random_state(init_prob);obs_init = rand(h.OutputDistr(s_init),1)S(1) = s_init;X = [X obs_init]s_prev = s_init;for i=2:nSamples    %Propagate Markov chain to obtain sequence    s_prop = random_state(trans_prob(s_prev,:));    %Sample observation from output distribution    obs = rand(h.OutputDistr(s_prop),1)    S(i) = s_prop;    X = [X obs];        s_prev = s_prop;endSXend